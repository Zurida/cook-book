{"version":3,"file":"login-BS5L6CsW.js","sources":["../../../../components/auth/Auth.vue"],"sourcesContent":["<script setup>\r\nconst canvas = ref(null)\r\n\r\nonMounted(() => {\r\n    const canvasVal = canvas.value;\r\n    const ctx = canvas.value.getContext('2d')\r\n\r\n    canvasVal.width = innerWidth;\r\n    canvasVal.height = innerHeight\r\n\r\n\r\n    const htmlRoot = document.querySelector(':root');\r\n    const rootStyles = getComputedStyle(htmlRoot);\r\n\r\n    // const colors = ['#FFD037', '#255735', '#E83C3C']\r\n    const colors = [rootStyles.getPropertyValue('--main-1'), rootStyles.getPropertyValue('--main-2'), rootStyles.getPropertyValue('--main-3')]\r\n\r\n    class Particle {\r\n        constructor(effect) {   // every particle will expect a reference pointing to the main effect object. We are not creating copies of the effect, \r\n\r\n            this.effect = effect   //just pointing to that sane effect class from multiple places \r\n            this.radius = Math.random() * 20 + 80\r\n            this.x = this.radius + Math.random() * (this.effect.width - this.radius * 2) // расчеты, чтобы круги были видны полностью и не разрывались экраном по краям\r\n            this.y = this.radius + Math.random() * (this.effect.height - this.radius * 2)\r\n            this.vx = Math.random() * 4 - 2 // velocity  \r\n            this.vy = Math.random() * 4 - 2 // velocity  \r\n            this.color = Math.floor(Math.random() * 3)\r\n        }\r\n\r\n        draw(context) { // defines what each particle looks like\r\n            ctx.globalAlpha = 0.2;\r\n\r\n\r\n            ctx.fillStyle = colors[this.color]\r\n            context.beginPath()\r\n            context.arc(this.x, this.y, this.radius, 0, Math.PI * 2)\r\n            context.fill()\r\n        }\r\n\r\n        update() {\r\n            this.x += this.vx\r\n            if (this.x > this.effect.width - this.radius || this.x < this.radius) {\r\n                this.vx *= -1\r\n            }\r\n\r\n            this.y += this.vy\r\n            if (this.y > this.effect.height - this.radius || this.y < this.radius) {\r\n                this.vy *= -1\r\n            }\r\n        }\r\n    }\r\n\r\n    class Effect {\r\n        constructor(canvas) {\r\n            this.canvas = canvas\r\n            this.width = this.canvas.width\r\n            this.height = this.canvas.height\r\n            this.particles = []\r\n            this.numberOfParticles = 4\r\n            this.createParticles()\r\n        }\r\n\r\n        createParticles() { // methods initialises the effect\r\n            for (let i = 0; i < this.numberOfParticles; i++) {\r\n                this.particles.push(new Particle(this))\r\n            }\r\n        }\r\n\r\n        handleParticles(context) {\r\n            this.particles.forEach((particle) => {\r\n                particle.draw(context)\r\n                particle.update()\r\n            })\r\n        }\r\n    }\r\n\r\n    const effect = new Effect(canvasVal)\r\n\r\n    function animate() {\r\n        ctx.clearRect(0, 0, canvasVal.width, canvasVal.height)\r\n        effect.handleParticles(ctx)\r\n        requestAnimationFrame(animate)\r\n    }\r\n    animate()\r\n})\r\n\r\n\r\n</script>\r\n\r\n<template>\r\n    <div>\r\n        <canvas ref=\"canvas\"></canvas>\r\n        <div class=\"container\">\r\n            <h1 class=\"auth__heading\">\r\n                <span>COOK</span>\r\n                <span>BOOK</span>\r\n            </h1>\r\n\r\n            <div class=\"auth__buttons\">\r\n                <CommonVButton class=\"auth__btn\" to=\"/\">Войти</CommonVButton>\r\n                <CommonVButton class=\" auth__btn\">Регистрация</CommonVButton>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\ncanvas {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    translate: -50% -50%;\r\n}\r\n\r\n.auth {\r\n    &__heading {\r\n        font-size: 18rem;\r\n        line-height: 1;\r\n        color: var(--white-soft);\r\n\r\n        span {\r\n            display: block;\r\n            font-weight: 700;\r\n\r\n            &:last-child {\r\n                margin-top: -7rem;\r\n                opacity: 0.5;\r\n                padding-left: 2rem;\r\n            }\r\n        }\r\n    }\r\n\r\n    &__buttons {\r\n        position: relative;\r\n        z-index: 2;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-top: 2rem;\r\n    }\r\n\r\n    &__btn {\r\n        &:last-child {\r\n            margin-left: 2rem;\r\n        }\r\n    }\r\n}\r\n</style>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACe,QAAI,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}